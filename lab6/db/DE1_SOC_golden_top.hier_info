|DE1_top
clock_50 => gen_counter:u1.clk
clock_50 => traffic_control:u6.clk
HEX0[0] << traffic_segment_cntrl:u2.output[0]
HEX0[1] << traffic_segment_cntrl:u2.output[1]
HEX0[2] << traffic_segment_cntrl:u2.output[2]
HEX0[3] << traffic_segment_cntrl:u2.output[3]
HEX0[4] << traffic_segment_cntrl:u2.output[4]
HEX0[5] << traffic_segment_cntrl:u2.output[5]
HEX0[6] << traffic_segment_cntrl:u2.output[6]
HEX1[0] << traffic_segment_cntrl:u3.output[0]
HEX1[1] << traffic_segment_cntrl:u3.output[1]
HEX1[2] << traffic_segment_cntrl:u3.output[2]
HEX1[3] << traffic_segment_cntrl:u3.output[3]
HEX1[4] << traffic_segment_cntrl:u3.output[4]
HEX1[5] << traffic_segment_cntrl:u3.output[5]
HEX1[6] << traffic_segment_cntrl:u3.output[6]
HEX2[0] << traffic_segment_cntrl:u4.output[0]
HEX2[1] << traffic_segment_cntrl:u4.output[1]
HEX2[2] << traffic_segment_cntrl:u4.output[2]
HEX2[3] << traffic_segment_cntrl:u4.output[3]
HEX2[4] << traffic_segment_cntrl:u4.output[4]
HEX2[5] << traffic_segment_cntrl:u4.output[5]
HEX2[6] << traffic_segment_cntrl:u4.output[6]
HEX3[0] << traffic_segment_cntrl:u5.output[0]
HEX3[1] << traffic_segment_cntrl:u5.output[1]
HEX3[2] << traffic_segment_cntrl:u5.output[2]
HEX3[3] << traffic_segment_cntrl:u5.output[3]
HEX3[4] << traffic_segment_cntrl:u5.output[4]
HEX3[5] << traffic_segment_cntrl:u5.output[5]
HEX3[6] << traffic_segment_cntrl:u5.output[6]
KEY[0] => traffic_control:u6.reset_a
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => traffic_control:u6.weight
SW[1] => traffic_control:u6.night
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~


|DE1_top|gen_counter:u1
clk => term~reg0.CLK
clk => i_count[0].CLK
clk => i_count[1].CLK
clk => i_count[2].CLK
data[0] => i_count.DATAB
data[1] => i_count.DATAB
data[2] => i_count.DATAB
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
enable => i_count.OUTPUTSELECT
reset => term~reg0.ACLR
reset => i_count[0].ACLR
reset => i_count[1].ACLR
reset => i_count[2].ACLR
count[0] <= i_count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= i_count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= i_count[2].DB_MAX_OUTPUT_PORT_TYPE
term <= term~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|traffic_segment_cntrl:u2
north_south => Mux0.IN15
north_south => Mux1.IN11
north_south => Mux1.IN12
north_south => Mux1.IN13
north_south => Mux1.IN14
north_south => Mux1.IN15
north_south => Mux2.IN15
north_south => Mux3.IN15
north_south => Mux4.IN15
north_south => Mux0.IN14
north_south => Mux1.IN7
north_south => Mux1.IN8
north_south => Mux1.IN9
north_south => Mux1.IN10
north_south => Mux2.IN14
north_south => Mux3.IN14
north_south => Mux4.IN13
north_south => Mux4.IN14
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
output[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= <GND>
output[5] <= <GND>
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|traffic_segment_cntrl:u3
north_south => Mux0.IN15
north_south => Mux1.IN11
north_south => Mux1.IN12
north_south => Mux1.IN13
north_south => Mux1.IN14
north_south => Mux1.IN15
north_south => Mux2.IN15
north_south => Mux3.IN15
north_south => Mux4.IN15
north_south => Mux0.IN14
north_south => Mux1.IN7
north_south => Mux1.IN8
north_south => Mux1.IN9
north_south => Mux1.IN10
north_south => Mux2.IN14
north_south => Mux3.IN14
north_south => Mux4.IN13
north_south => Mux4.IN14
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
output[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= <GND>
output[5] <= <GND>
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|traffic_segment_cntrl:u4
north_south => Mux0.IN15
north_south => Mux1.IN11
north_south => Mux1.IN12
north_south => Mux1.IN13
north_south => Mux1.IN14
north_south => Mux1.IN15
north_south => Mux2.IN15
north_south => Mux3.IN15
north_south => Mux4.IN15
north_south => Mux0.IN14
north_south => Mux1.IN7
north_south => Mux1.IN8
north_south => Mux1.IN9
north_south => Mux1.IN10
north_south => Mux2.IN14
north_south => Mux3.IN14
north_south => Mux4.IN13
north_south => Mux4.IN14
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
output[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= <GND>
output[5] <= <GND>
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|traffic_segment_cntrl:u5
north_south => Mux0.IN15
north_south => Mux1.IN11
north_south => Mux1.IN12
north_south => Mux1.IN13
north_south => Mux1.IN14
north_south => Mux1.IN15
north_south => Mux2.IN15
north_south => Mux3.IN15
north_south => Mux4.IN15
north_south => Mux0.IN14
north_south => Mux1.IN7
north_south => Mux1.IN8
north_south => Mux1.IN9
north_south => Mux1.IN10
north_south => Mux2.IN14
north_south => Mux3.IN14
north_south => Mux4.IN13
north_south => Mux4.IN14
input[0] => Mux0.IN19
input[0] => Mux1.IN19
input[0] => Mux2.IN19
input[0] => Mux3.IN19
input[0] => Mux4.IN19
input[1] => Mux0.IN18
input[1] => Mux1.IN18
input[1] => Mux2.IN18
input[1] => Mux3.IN18
input[1] => Mux4.IN18
input[2] => Mux0.IN17
input[2] => Mux1.IN17
input[2] => Mux2.IN17
input[2] => Mux3.IN17
input[2] => Mux4.IN17
input[3] => Mux0.IN16
input[3] => Mux1.IN16
input[3] => Mux2.IN16
input[3] => Mux3.IN16
input[3] => Mux4.IN16
output[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= <GND>
output[5] <= <GND>
output[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_top|traffic_control:u6
clk => current_state~1.DATAIN
reset_a => current_state~3.DATAIN
weight => process_1.IN0
weight => process_1.IN0
weight => process_1.IN1
weight => process_1.IN1
weight => process_1.IN0
night => Selector10.IN4
night => Selector1.IN1
north_south => process_1.IN1
north_south => process_1.IN1
north_south => process_1.IN1
count[0] => Equal0.IN2
count[0] => Equal1.IN1
count[0] => Equal2.IN2
count[1] => Equal0.IN0
count[1] => Equal1.IN2
count[1] => Equal2.IN1
count[2] => Equal0.IN1
count[2] => Equal1.IN0
count[2] => Equal2.IN0
state_out[0] <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
state_out[1] <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
state_out[2] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE
state_out[3] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
reset_out <= Selector12.DB_MAX_OUTPUT_PORT_TYPE


