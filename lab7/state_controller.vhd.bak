LIBRARY ieee;
USE ieee.NUMERIC_STD.all;
use ieee.STD_LOGIC_1164.all;

entity state_controller is
	port(
		clk: in std_logic;
		start : in std_logic;
		stop : in std_logic;
		state_out : out std_logic_vector(1 downto 0);
	);
end entity state_controller;

architecture logic of state_controller is
	type state_type is (idle, start, stop)
	
	current_state : state_type;
	next_state : state_type;
	
begin
	process(clk, start, stop)
	begin
		if stop = '1' then
			current_state <= stop;
		elsif rising_edge(clk) then
			if count = '1' then
				current_state <= next_state;
			else
				current_state <= current_state;
			end if;
		end if;
	end process;
	
	process(current_state)
	begin
		case current_state is
			when idle =>
				state_out <= "00";
				if start = '1' then
					next_state <= start;
				else
					next_state <= current_state;
				end if;
			when start =>
				state_out <= "01";
				next_state <= stop;
			when others
				state_out <= "10";
				next_state <= stop;
		end case;
	end process;
	
end logic;
		