LIBRARY ieee;
USE ieee.NUMERIC_STD.all;
use ieee.STD_LOGIC_1164.all;

entity seconds_controller is
	port (
		clk : in std_logic;
		start : in std_logic;
		stop : in std_logic;
		reset : out std_logic;
		LED_out : out std_logic;
		count_out : out unsigned(3 downto 0)
		);
end entity seconds_controller;

architecture logic of seconds_controller is
	type state_type is (idle, running, stopped);
		
	signal current_state: state_type;
	signal next_state: state_type;
	
	signal is_running: std_logic;	
begin
	process(clk, start, stop, count)
		variable count : unsigned(3 downto 0);

	begin
		if start = '1' then
			if	is_running = '0' then
				LED_out <= '1';
				is_running <= '1';
			end if;
		if stop = '1' then
			if is_running = '1' then
				LED_out <= '1';
				is_running <= '0';
			end if;
		elsif rising_edge(clk) then
			count <= count + 1;
			if(count = "1010") then
				count <= "0000";
			end if;
			count_out <= count;
		end if;
	end process;
	
	process(current_state)
	begin
		is_running <= '1';
		case current_state is
			when idle =>
				next_state <= start;
				is_running <= '0';
			when running =>
				next_state <= stopped;
			when others =>
				next_state <= idle;
				is_running <= '0';
			end case;
	end process;
	
				
		